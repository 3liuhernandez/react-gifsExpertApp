{"version":3,"sources":["components/AddCategory.js","components/GifGridItem.js","helpers/getGifs.js","components/balanz.jpg","components/MetaTags.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","GifGridItem","id","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","images","downsized_medium","getDefault","description","keywords","robots","imagen","imagen__","canonicalUrl","MetaTags","meta","metaData","getPageMetadata","Helmet","name","content","rel","href","GifGrid","loading","state","setState","useEffect","then","setTimeout","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.00a94f41.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst AddCategory = ( {setCategories} ) => {\r\n    \r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = ( e ) => {\r\n        /* console.log( e.target.value ); */\r\n        setinputValue( e.target.value );\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if( inputValue.trim().length > 2 ) {\r\n\r\n            /* console.log(setCategories); */\r\n            setCategories( cats => [ inputValue, ...cats ] );\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit = { handleSubmit }>  \r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;","import React from 'react'\r\n\r\nexport const GifGridItem = ({ id, title, url }) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounceIn\">\r\n            <img src={ url } alt={ title } />\r\n            <p>{ title }</p>\r\n        </div>\r\n    )\r\n}","\r\n\r\nexport const getGifs = async( category ) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI( category ) }&limit=10&api_key=kryDwjqhKwUh4bCKs7IBOL1XIY69kmeH`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    \r\n    return gifs;\r\n}","export default __webpack_public_path__ + \"static/media/balanz.65e2aa1e.jpg\";","import Helmet from 'react-helmet';\r\nimport imagen__ from './balanz.jpg';\r\n\r\nconst getDefault = {\r\n    title: \"title default\", \r\n    description: \"My default Website description\",\r\n    keywords: \"My default Website keyowrods\",\r\n    robots:\"follow\",\r\n    imagen: imagen__,\r\n    canonicalUrl: 'https://gomuf.com'\r\n};\r\n\r\nexport const getPageMetadata = ( metaData ) => {\r\n    const { title, description, keywords, robots, canonicalUrl } = metaData;\r\n    const defaultData = getDefault;\r\n    return {\r\n        title: title || defaultData?.title,\r\n        description: description || defaultData?.description,\r\n        keywords: keywords || defaultData?.keywords,\r\n        robots: robots || defaultData?.canonicalUrl,\r\n        canonicalUrl: canonicalUrl || defaultData?.canonicalUrl,\r\n    };\r\n};\r\n\r\nconst MetaTags = ({ metaData }) => {\r\n    const meta = getPageMetadata(metaData);\r\n    return (\r\n        <Helmet>\r\n            <title>{meta.title}</title>\r\n            <meta name=\"description\" content={meta.description} />\r\n            <meta name=\"keywords\" content={meta.keywords} />\r\n            {meta.robots && <meta name=\"robots\" content={meta.robots} />}\r\n            <link rel=\"canonical\" href={meta.canonicalUrl} />\r\n            <meta name=\"imagen\" content={meta.imagen} />\r\n        </Helmet>\r\n    );\r\n}; \r\n\r\nexport default MetaTags;\r\n","import { GifGridItem } from \"./GifGridItem\"; \r\n\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport MetaTags from \"./MetaTags\";\r\nimport imagen__ from './balanz.jpg';\r\n\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const { data:gifs, loading } = useFetchGifs( category );\r\n\r\n    const metaData = {\r\n        title: \"t asd\", \r\n        description: \"d asd\",\r\n        keywords: \"k asd\",\r\n        robots:\"follow\",\r\n        imagen: imagen__,\r\n        canonicalUrl: 'https://gomuf.com'\r\n    };\r\n    \r\n    return (\r\n        <>\r\n            <MetaTags metaData={metaData}/>\r\n            <h3 className=\"animate__animated animate__backInLeft\"> { category } </h3>\r\n            <img src=\"images/balanz.jpg\" alt=\"balanz logo\"/>\r\n\r\n            { loading && <p className=\"animate__animated animate__flash animate__infinite\">Loading</p>}\r\n\r\n            <div className='card-grid'>\r\n                {\r\n                    gifs.map( (img) => (\r\n                        <GifGridItem key={ img.id } { ...img } />\r\n                    ))\r\n                }\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n        \r\n        getGifs( category )\r\n            .then( gifs => {\r\n                setTimeout(() => {\r\n                    setState({\r\n                        data: gifs,\r\n                        loading: false\r\n                    })\r\n                }, 2000);\r\n            })\r\n\r\n    }, [category])\r\n\r\n    return state;\r\n}\r\n","import { useState } from 'react';\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategories] = useState(['One Punch']);\r\n    /* console.log(categories); */\r\n\r\n    /* const handleAdd = () => {\r\n        // setCategories( ['Marvel', ...categories] );\r\n        setCategories( cats => [ ...cats, 'Marvel'] );\r\n    } */\r\n\r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories = { setCategories } />\r\n            <hr />\r\n            {/* <button onClick = { handleAdd }>Agregar</button> */}\r\n\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid \r\n                            key = { category }\r\n                            category = { category }\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport GifExpertApp from './GifExpertApp';\r\n\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n  <GifExpertApp />,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}